name: Fonts Proxy CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: build-and-test
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: fonts-proxy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: |
            **/package-lock.json
            **/npm-shrinkwrap.json

      - name: Install project dependencies
        run: |
          set -euo pipefail
          trap 'echo "::error::Dependency installation failed"' ERR
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          else
            npm install
          fi
        shell: bash

      - name: Install global API CLIs
        run: |
          set -euo pipefail
          trap 'echo "::error::Global CLI installation failed"' ERR
          npm install -g @stoplight/spectral-cli openapi-diff
        shell: bash

      - name: Lint OpenAPI description with Spectral
        run: |
          set -euo pipefail
          trap 'echo "::error::Spectral linting failed"' ERR
          spectral lint openapi.yaml
        shell: bash

      - name: Setup Java 11
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      - name: Compare OpenAPI definitions
        run: |
          set -euo pipefail
          trap 'echo "::error::OpenAPI diff failed"' ERR
          openapi-diff openapi-prev.yaml openapi.yaml
        shell: bash

      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Validate event logs with custom script
        run: |
          set -euo pipefail
          trap 'echo "::error::Event log validation failed"' ERR
          node scripts/validate-events.js
        shell: bash
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Validate events.json schema with Spectral
        run: |
          set -euo pipefail
          trap 'echo "::error::Event schema validation failed"' ERR
          spectral lint events.json
        shell: bash
